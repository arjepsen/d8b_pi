/*
  ==============================================================================

    LEDClass.h
    Created: 9 Jul 2023 4:40:04pm
    Author:  anders

  ==============================================================================
*/

#pragma once

#include <array>
#include <string>
#include <unordered_map>

// We use this enumeration to index the array in the map below.
enum ChStripLED
{
    RECRDY,
    ASSIGN,
    WRITE,
    RING_1,
    RING_2,
    RING_3,
    RING_4,
    RING_5,
    RING_6, // Center Led
    RING_7,
    RING_8,
    RING_9,
    RING_10,
    RING_11,
    RING_DOT,
    SELECT_LED,
    SOLO_LED,
    MUTE_LED,
    RED_CH_LED,
    GREEN_CH_LED,
    CH_STRIP_LED_COUNT
};

enum LedStateCommand : char
{
    LED_ON_CMD = 'i',
    LED_OFF_CMD = 'j',
    LED_BLINK_CMD = 'k'
};

constexpr int LED_COMMAND_LENGTH = 4; // Including null terminator

// Ring LED's for channel strips.
// This ought to be a const, but that would require using .at() for access, and the [] operator is faster.
// TODO: Work on changing the use of std::strings to c-style strings.

// So, the channel strip ID's are a two-char string, representing a hex value.
// Since a char is basically an integer, we can effectively translate this hex-string to
// an integer, by shifting the first char/int 8 bit, and then OR the second char/int:
// ID_INTEGER = id[0] << 8) | id[1];
// SO: this means we can simply use the direct integer, written as a hex value, for the first value.


// uint16_t for two-char hex value
// std::unordered_map<uint16_t, char[CH_STRIP_LED_COUNT][4] > CHSTRIPLEDMAP =
// const uint16_t CH_STRIP_LED_MAP[CH_STRIP_COUNT]

// Array of LED command. Use ChStripID enumeration for first index, 
// then ChStripLED enumeration for indexing the specific command.
// Some commands are padded with zeros for effeciency in handling. 
// Technically those zeros not needed. (000 = 0, 001 = 1, etc.)
const char CH_STRIP_LED_MAP[][CH_STRIP_LED_COUNT][LED_COMMAND_LENGTH]
{
    {"110", "111", "112", "113", "114", "115", "116", "117", "118", "119", "11A", "11B", "11C", "11D", "11E", "11F", "100", "101", "102", "103"},
    {"108", "109", "10A", "10B", "10C", "10D", "10E", "10F", "0F0", "0F1", "0F2", "0F3", "0F4", "0F5", "0F6", "0F7", "0F8", "0F9", "0FA", "0FB"},
    {"0E0", "0E1", "0E2", "0E3", "0E4", "0E5", "0E6", "0E7", "0E8", "0E9", "0EA", "0EB", "0EC", "0ED", "0EE", "0EF", "0D0", "0D1", "0D2", "0D3"},
    {"0D8", "0D9", "0DA", "0DB", "0DC", "0DD", "0DE", "0DF", "0C0", "0C1", "0C2", "0C3", "0C4", "0C5", "0C6", "0C7", "0C8", "0C9", "0CA", "0CB"},
    {"0B0", "0B1", "0B2", "0B3", "0B4", "0B5", "0B6", "0B7", "0B8", "0B9", "0BA", "0BB", "0BC", "0BD", "0BE", "0BF", "0A0", "0A1", "0A2", "0A3"},
    {"0A8", "0A9", "0AA", "0AB", "0AC", "0AD", "0AE", "0AF", "090", "091", "092", "093", "094", "095", "096", "097", "098", "099", "09A", "09B"},
    {"080", "081", "082", "083", "084", "085", "086", "087", "088", "089", "08A", "08B", "08C", "08D", "08E", "08F", "070", "071", "072", "073"},
    {"078", "079", "07A", "07B", "07C", "07D", "07E", "07F", "060", "061", "062", "063", "064", "065", "066", "067", "068", "069", "06A", "06B"},
    {"050", "051", "052", "053", "054", "055", "056", "057", "058", "059", "05A", "05B", "05C", "05D", "05E", "05F", "040", "041", "042", "043"},
    {"048", "049", "04A", "04B", "04C", "04D", "04E", "04F", "030", "031", "032", "033", "034", "035", "036", "037", "038", "039", "03A", "03B"},
    {"020", "021", "022", "023", "024", "025", "026", "027", "028", "029", "02A", "02B", "02C", "02D", "02E", "02F", "010", "011", "012", "013"},
    {"018", "019", "01A", "01B", "01C", "01D", "01E", "01F", "000", "001", "002", "003", "004", "005", "006", "007", "008", "009", "00A", "00B"},
    {"340", "341", "342", "343", "344", "345", "346", "347", "348", "349", "34A", "34B", "34C", "34D", "34E", "34F", "330", "331", "332", "333"},
    {"338", "339", "33A", "33B", "33C", "33D", "33E", "33F", "320", "321", "322", "323", "324", "325", "326", "327", "328", "329", "32A", "32B"},
    {"310", "311", "312", "313", "314", "315", "316", "317", "318", "319", "31A", "31B", "31C", "31D", "31E", "31F", "300", "301", "302", "303"},
    {"308", "309", "30A", "30B", "30C", "30D", "30E", "30F", "2F0", "2F1", "2F2", "2F3", "2F4", "2F5", "2F6", "2F7", "2F8", "2F9", "2FA", "2FB"},
    {"2E0", "2E1", "2E2", "2E3", "2E4", "2E5", "2E6", "2E7", "2E8", "2E9", "2EA", "2EB", "2EC", "2ED", "2EE", "2EF", "2D0", "2D1", "2D2", "2D3"},
    {"2D8", "2D9", "2DA", "2DB", "2DC", "2DD", "2DE", "2DF", "2C0", "2C1", "2C2", "2C3", "2C4", "2C5", "2C6", "2C7", "2C8", "2C9", "2CA", "2CB"},
    {"2B0", "2B1", "2B2", "2B3", "2B4", "2B5", "2B6", "2B7", "2B8", "2B9", "2BA", "2BB", "2BC", "2BD", "2BE", "2BF", "2A0", "2A1", "2A2", "2A3"},
    {"2A8", "2A9", "2AA", "2AB", "2AC", "2AD", "2AE", "2AF", "290", "291", "292", "293", "294", "295", "296", "297", "298", "299", "29A", "29B"},
    {"280", "281", "282", "283", "284", "285", "286", "287", "288", "289", "28A", "28B", "28C", "28D", "28E", "28F", "270", "271", "272", "273"},
    {"278", "279", "27A", "27B", "27C", "27D", "27E", "27F", "260", "261", "262", "263", "264", "265", "266", "267", "268", "269", "26A", "26B"},
    {"250", "251", "252", "253", "254", "255", "256", "257", "258", "259", "25A", "25B", "25C", "25D", "25E", "25F", "240", "241", "242", "243"},
    {"248", "249", "24A", "24B", "24C", "24D", "24E", "24F", "230", "231", "232", "233", "234", "235", "236", "237", "238", "239", "23A", "23B"}
};

class LEDringLookup
{
  private:

    ChStripLED ledRingLookup[256];

    LEDringLookup()
    {
        // Create the array map of corresponding ring id's to vpot values.
        for (int i = 0; i < 256; ++i) 
        {
            if (i < 28)       ledRingLookup[i] = RING_1;
            else if (i < 54)  ledRingLookup[i] = RING_2;
            else if (i < 78)  ledRingLookup[i] = RING_3;
            else if (i < 100) ledRingLookup[i] = RING_4;
            else if (i < 120) ledRingLookup[i] = RING_5;
            else if (i < 136) ledRingLookup[i] = RING_6;
            else if (i < 156) ledRingLookup[i] = RING_7;
            else if (i < 178) ledRingLookup[i] = RING_8;
            else if (i < 202) ledRingLookup[i] = RING_9;
            else if (i < 228) ledRingLookup[i] = RING_10;
            else              ledRingLookup[i] = RING_11;
        }
    }

  public:
    LEDringLookup(const LEDringLookup &) = delete;            // Prevent copying
    LEDringLookup &operator=(const LEDringLookup &) = delete; // Prevent assignment

    static LEDringLookup &getInstance()
    {
        static LEDringLookup instance; // Singleton instance
        return instance;
    }

    inline ChStripLED getRingID(int vPotValue)
    {
        return ledRingLookup[vPotValue];
    }
};



// const char CH_STRIP_LED_MAP[][CH_STRIP_LED_COUNT][LED_COMMAND_LENGTH]
// {
//     {"110", "111", "112", "113", "114", "115", "116", "117", "118", "119", "11A", "11B", "11C", "11D", "11E", "11F", "100", "101", "102", "103"},
//     {"108", "109", "10A", "10B", "10C", "10D", "10E", "10F", "F0", "F1", "F2", "F3", "F4", "F5", "F6", "F7", "F8", "F9", "FA", "FB"},
//     {"E0", "E1", "E2", "E3", "E4", "E5", "E6", "E7", "E8", "E9", "EA", "EB", "EC", "ED", "EE", "EF", "D0", "D1", "D2", "D3"},
//     {"D8", "D9", "DA", "DB", "DC", "DD", "DE", "DF", "C0", "C1", "C2", "C3", "C4", "C5", "C6", "C7", "C8", "C9", "CA", "CB"},
//     {"B0", "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "BA", "BB", "BC", "BD", "BE", "BF", "A0", "A1", "A2", "A3"},
//     {"A8", "A9", "AA", "AB", "AC", "AD", "AE", "AF", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99", "9A", "9B"},
//     {"80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "8A", "8B", "8C", "8D", "8E", "8F", "70", "71", "72", "73"},
//     {"78", "79", "7A", "7B", "7C", "7D", "7E", "7F", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69", "6A", "6B"},
//     {"50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "5A", "5B", "5C", "5D", "5E", "5F", "40", "41", "42", "43"},
//     {"48", "49", "4A", "4B", "4C", "4D", "4E", "4F", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "3A", "3B"},
//     {"20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "2A", "2B", "2C", "2D", "2E", "2F", "10", "11", "12", "13"},
//     {"18", "19", "1A", "1B", "1C", "1D", "1E", "1F", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B"},
//     {"340", "341", "342", "343", "344", "345", "346", "347", "348", "349", "34A", "34B", "34C", "34D", "34E", "34F", "330", "331", "332", "333"},
//     {"338", "339", "33A", "33B", "33C", "33D", "33E", "33F", "320", "321", "322", "323", "324", "325", "326", "327", "328", "329", "32A", "32B"},
//     {"310", "311", "312", "313", "314", "315", "316", "317", "318", "319", "31A", "31B", "31C", "31D", "31E", "31F", "300", "301", "302", "303"},
//     {"308", "309", "30A", "30B", "30C", "30D", "30E", "30F", "2F0", "2F1", "2F2", "2F3", "2F4", "2F5", "2F6", "2F7", "2F8", "2F9", "2FA", "2FB"},
//     {"2E0", "2E1", "2E2", "2E3", "2E4", "2E5", "2E6", "2E7", "2E8", "2E9", "2EA", "2EB", "2EC", "2ED", "2EE", "2EF", "2D0", "2D1", "2D2", "2D3"},
//     {"2D8", "2D9", "2DA", "2DB", "2DC", "2DD", "2DE", "2DF", "2C0", "2C1", "2C2", "2C3", "2C4", "2C5", "2C6", "2C7", "2C8", "2C9", "2CA", "2CB"},
//     {"2B0", "2B1", "2B2", "2B3", "2B4", "2B5", "2B6", "2B7", "2B8", "2B9", "2BA", "2BB", "2BC", "2BD", "2BE", "2BF", "2A0", "2A1", "2A2", "2A3"},
//     {"2A8", "2A9", "2AA", "2AB", "2AC", "2AD", "2AE", "2AF", "290", "291", "292", "293", "294", "295", "296", "297", "298", "299", "29A", "29B"},
//     {"280", "281", "282", "283", "284", "285", "286", "287", "288", "289", "28A", "28B", "28C", "28D", "28E", "28F", "270", "271", "272", "273"},
//     {"278", "279", "27A", "27B", "27C", "27D", "27E", "27F", "260", "261", "262", "263", "264", "265", "266", "267", "268", "269", "26A", "26B"},
//     {"250", "251", "252", "253", "254", "255", "256", "257", "258", "259", "25A", "25B", "25C", "25D", "25E", "25F", "240", "241", "242", "243"},
//     {"248", "249", "24A", "24B", "24C", "24D", "24E", "24F", "230", "231", "232", "233", "234", "235", "236", "237", "238", "239", "23A", "23B"}
// };




// std::unordered_map<std::string, std::array<std::string, CH_STRIP_LED_COUNT>>
//     CH_STRIP_LED_MAP =
//         {
//             {"00", {"110", "111", "112", "113", "114", "115", "116", "117", "118", "119", "11A", "11B", "11C", "11D", "11E", "11F", "100", "101", "102", "103"}},
//             {"01", {"108", "109", "10A", "10B", "10C", "10D", "10E", "10F", "F0", "F1", "F2", "F3", "F4", "F5", "F6", "F7", "F8", "F9", "FA", "FB"}},
//             {"02", {"E0", "E1", "E2", "E3", "E4", "E5", "E6", "E7", "E8", "E9", "EA", "EB", "EC", "ED", "EE", "EF", "D0", "D1", "D2", "D3"}},
//             {"03", {"D8", "D9", "DA", "DB", "DC", "DD", "DE", "DF", "C0", "C1", "C2", "C3", "C4", "C5", "C6", "C7", "C8", "C9", "CA", "CB"}},
//             {"04", {"B0", "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "BA", "BB", "BC", "BD", "BE", "BF", "A0", "A1", "A2", "A3"}},
//             {"05", {"A8", "A9", "AA", "AB", "AC", "AD", "AE", "AF", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99", "9A", "9B"}},
//             {"06", {"80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "8A", "8B", "8C", "8D", "8E", "8F", "70", "71", "72", "73"}},
//             {"07", {"78", "79", "7A", "7B", "7C", "7D", "7E", "7F", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69", "6A", "6B"}},
//             {"08", {"50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "5A", "5B", "5C", "5D", "5E", "5F", "40", "41", "42", "43"}},
//             {"09", {"48", "49", "4A", "4B", "4C", "4D", "4E", "4F", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "3A", "3B"}},
//             {"0A", {"20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "2A", "2B", "2C", "2D", "2E", "2F", "10", "11", "12", "13"}},
//             {"0B", {"18", "19", "1A", "1B", "1C", "1D", "1E", "1F", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B"}},
//             {"0C", {"340", "341", "342", "343", "344", "345", "346", "347", "348", "349", "34A", "34B", "34C", "34D", "34E", "34F", "330", "331", "332", "333"}},
//             {"0D", {"338", "339", "33A", "33B", "33C", "33D", "33E", "33F", "320", "321", "322", "323", "324", "325", "326", "327", "328", "329", "32A", "32B"}},
//             {"0E", {"310", "311", "312", "313", "314", "315", "316", "317", "318", "319", "31A", "31B", "31C", "31D", "31E", "31F", "300", "301", "302", "303"}},
//             {"0F", {"308", "309", "30A", "30B", "30C", "30D", "30E", "30F", "2F0", "2F1", "2F2", "2F3", "2F4", "2F5", "2F6", "2F7", "2F8", "2F9", "2FA", "2FB"}},
//             {"10", {"2E0", "2E1", "2E2", "2E3", "2E4", "2E5", "2E6", "2E7", "2E8", "2E9", "2EA", "2EB", "2EC", "2ED", "2EE", "2EF", "2D0", "2D1", "2D2", "2D3"}},
//             {"11", {"2D8", "2D9", "2DA", "2DB", "2DC", "2DD", "2DE", "2DF", "2C0", "2C1", "2C2", "2C3", "2C4", "2C5", "2C6", "2C7", "2C8", "2C9", "2CA", "2CB"}},
//             {"12", {"2B0", "2B1", "2B2", "2B3", "2B4", "2B5", "2B6", "2B7", "2B8", "2B9", "2BA", "2BB", "2BC", "2BD", "2BE", "2BF", "2A0", "2A1", "2A2", "2A3"}},
//             {"13", {"2A8", "2A9", "2AA", "2AB", "2AC", "2AD", "2AE", "2AF", "290", "291", "292", "293", "294", "295", "296", "297", "298", "299", "29A", "29B"}},
//             {"14", {"280", "281", "282", "283", "284", "285", "286", "287", "288", "289", "28A", "28B", "28C", "28D", "28E", "28F", "270", "271", "272", "273"}},
//             {"15", {"278", "279", "27A", "27B", "27C", "27D", "27E", "27F", "260", "261", "262", "263", "264", "265", "266", "267", "268", "269", "26A", "26B"}},
//             {"16", {"250", "251", "252", "253", "254", "255", "256", "257", "258", "259", "25A", "25B", "25C", "25D", "25E", "25F", "240", "241", "242", "243"}},
//             {"17", {"248", "249", "24A", "24B", "24C", "24D", "24E", "24F", "230", "231", "232", "233", "234", "235", "236", "237", "238", "239", "23A", "23B"}}};
